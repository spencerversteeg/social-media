// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  followers User[] @relation("FollowRelation", references: [id])
  following User[] @relation("FollowRelation", references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  UserVerification  UserVerification?
  UserPasswordReset UserPasswordReset[]
  Post              Post[]
  Like              Like[]
  Comment           Comment[]
}

model UserVerification {
  id        String   @id @default(uuid())
  verified  Boolean  @default(false)
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model UserPasswordReset {
  id        String   @id @default(uuid())
  used      Boolean  @default(false)
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Post {
  id      String @id @default(cuid())
  message String
  user    User   @relation(fields: [userId], references: [id])
  userId  String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Like      Like[]
  Comment   Comment[]
}

model Like {
  id     String @id @default(uuid())
  post   Post   @relation(fields: [postId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  postId String
  userId String
}

model Comment {
  id      String @id @default(uuid())
  message String
  user    User   @relation(fields: [userId], references: [id])
  post    Post   @relation(fields: [postId], references: [id])
  userId  String
  postId  String

  createdAt DateTime @default(now())
}
